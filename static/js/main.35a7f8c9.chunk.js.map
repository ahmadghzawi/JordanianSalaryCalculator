{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","calculating","amount","annualSalary","netAnnualSalary","monthlySalary","netMonthlySalary","totalTax","monthlyTax","totalSS","monthlySS","msg","exemption","person","family","socialSecurity","none","0.075","0.1425","0.2175","taxCategoryAmounts","calculateWithTaxIncluded","selectedSS","taxCategory","amountSubjectToTax","amountOverMillion","Math","floor","calculateWithTaxExcluded","a","salary","factor","minFactor","difference","roundToThreeDecimals","num","multiplier","pow","parseFloat","toFixed","round","toggleExemption","type","setState","selectSocialSecurity","onChange","name","value","onSubmit","method","Object","entries","filter","pair","setTimeout","result","this","className","id","checked","htmlFor","placeholder","event","target","style","visibility","disabled","onClick","role","Intl","NumberFormat","format","fontSize","href","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35a7f8c9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    calculating: false,\n    amount: \"\",\n\n    annualSalary: \"\",\n    netAnnualSalary: \"\",\n\n    monthlySalary: \"\",\n    netMonthlySalary: \"\",\n\n    totalTax: \"\",\n    monthlyTax: \"\",\n\n    totalSS: \"\",\n    monthlySS: \"\",\n\n    msg: \"\",\n\n    exemption: { person: true, family: false },\n\n    socialSecurity: { none: true, 0.075: false, 0.1425: false, 0.2175: false },\n\n    taxCategoryAmounts: [0, 250, 750, 1500, 2500, 3750, 247500],\n  };\n\n  calculateWithTaxIncluded = (annualSalary, selectedSS) => {\n    const { exemption, taxCategoryAmounts } = this.state;\n\n    let monthlySalary = annualSalary / 12;\n\n    let totalTax = 0;\n    let monthlyTax = 0;\n\n    let totalSS = 0;\n    let monthlySS = 0;\n\n    let netAnnualSalary = annualSalary - totalTax;\n    let netMonthlySalary = netAnnualSalary / 12;\n\n    let taxCategory = 0;\n\n    let amountSubjectToTax = 0;\n    let remainingAmountSubjectToTax = 0;\n    let amountOverMillion = 0;\n\n    if (\n      (annualSalary > 9000 && exemption.person) ||\n      (annualSalary > 18000 && exemption.family)\n    ) {\n      if (\n        (annualSalary > 1009000 && exemption.person) ||\n        (annualSalary > 1018000 && exemption.family)\n      ) {\n        amountOverMillion =\n          annualSalary - (exemption.person ? 1009000 : 1018000);\n        totalTax += taxCategoryAmounts[6] + amountOverMillion * 0.3;\n      } else {\n        amountSubjectToTax = exemption.person\n          ? annualSalary - 9000\n          : annualSalary - 18000;\n\n        if (amountSubjectToTax > 25000) {\n          taxCategory = 5;\n          remainingAmountSubjectToTax = amountSubjectToTax - 25000;\n          totalTax += remainingAmountSubjectToTax * 0.25;\n        } else {\n          taxCategory = Math.floor(amountSubjectToTax / 5000);\n          remainingAmountSubjectToTax = amountSubjectToTax % 5000;\n          totalTax += remainingAmountSubjectToTax * ((taxCategory + 1) * 0.05);\n        }\n\n        totalTax += taxCategoryAmounts[taxCategory];\n      }\n\n      monthlyTax = totalTax / 12;\n      netAnnualSalary = annualSalary - totalTax;\n      netMonthlySalary = netAnnualSalary / 12;\n    }\n\n    if (selectedSS !== \"none\") {\n      totalSS = (annualSalary > 39936 ? 39936 : annualSalary) * +selectedSS;\n      monthlySS = totalSS / 12;\n      netAnnualSalary -= totalSS;\n      monthlySalary = annualSalary / 12;\n      netMonthlySalary = netAnnualSalary / 12;\n    }\n\n    return {\n      annualSalary,\n      netAnnualSalary,\n      monthlySalary,\n      netMonthlySalary,\n      totalTax,\n      monthlyTax,\n      totalSS,\n      monthlySS,\n    };\n  };\n\n  calculateWithTaxExcluded = async (netAnnualSalary, selectedSS) => {\n    const { exemption } = this.state;\n    if (\n      (netAnnualSalary <= 9000 && exemption.person) ||\n      (netAnnualSalary <= 18000 && exemption.family)\n    )\n      return this.calculateWithTaxIncluded(+netAnnualSalary, selectedSS);\n    else {\n      let salary = netAnnualSalary * 1.5;\n      let factor = 1000;\n      let minFactor = 0.00001;\n      let difference = 0;\n\n      while (true) {\n        difference =\n          this.calculateWithTaxIncluded(salary, selectedSS).netAnnualSalary -\n          netAnnualSalary;\n\n        if (difference < 0) {\n          salary += factor;\n          factor = factor / 10;\n          salary -= factor;\n        } else salary -= factor;\n\n        if (difference < -minFactor && factor === minFactor) break;\n      }\n\n      return this.calculateWithTaxIncluded(salary + minFactor, selectedSS);\n    }\n  };\n\n  roundToThreeDecimals = (num) => {\n    let multiplier = Math.pow(10, 3);\n    num = parseFloat((num * multiplier).toFixed(11));\n\n    let Result = Math.round(num) / multiplier;\n    return +Result.toFixed(3);\n  };\n\n  toggleExemption = (type) => {\n    let { exemption } = this.state;\n\n    exemption = {\n      person: false,\n      family: false,\n    };\n    exemption[type] = true;\n\n    this.setState({ exemption });\n  };\n\n  selectSocialSecurity = (type) => {\n    let { socialSecurity } = this.state;\n\n    socialSecurity = {\n      none: false,\n      0.075: false,\n      0.1425: false,\n      0.2175: false,\n    };\n    socialSecurity[type] = true;\n\n    this.setState({ socialSecurity });\n  };\n\n  onChange = ({ name, value }) => this.setState({ [name]: value, msg: \"\" });\n\n  onSubmit = async (method) => {\n    const { amount, socialSecurity } = this.state;\n    const selectedSS = Object.entries(socialSecurity).filter(\n      (pair) => pair[1]\n    )[0][0];\n    let result;\n\n    if (amount > 10000000000) {\n      this.setState({\n        msg:\n          \"amount must not exceed 10 billion JOD! That is too much for one person per year.\",\n      });\n      return;\n    }\n\n    this.setState({ calculating: true });\n\n    await setTimeout(async () => {\n      if (method === \"included\")\n        result = await this.calculateWithTaxIncluded(+amount, selectedSS);\n      else result = await this.calculateWithTaxExcluded(+amount, selectedSS);\n\n      this.setState({ calculating: false, ...result });\n    }, 100);\n  };\n\n  render() {\n    const {\n      calculating,\n      amount,\n\n      annualSalary,\n      netAnnualSalary,\n\n      monthlySalary,\n      netMonthlySalary,\n\n      totalTax,\n      monthlyTax,\n\n      totalSS,\n      monthlySS,\n\n      exemption,\n      socialSecurity,\n      msg,\n    } = this.state;\n\n    const {\n      onChange,\n      onSubmit,\n      roundToThreeDecimals,\n      toggleExemption,\n      selectSocialSecurity,\n    } = this;\n\n    return (\n      <>\n        <div className=\"container mt-3\">\n          <div className=\"row\">\n            <div className=\"col-12 \">\n              <hr />\n              <h4 className=\"text-center\">Jordanian Salary Calculator</h4>\n              <hr />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-1\"></div>\n            <div className=\"col-10 mt-1\">\n              <div className=\"row m-0\">\n                <div className=\"col-12\">\n                  <div className=\"row m-0 d-flex justify-content-around flex-nowrap\">\n                    <div className=\"form-group\">\n                      <label className=\"border-bottom\">\n                        Income Tax Exemption\n                      </label>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"exemption\"\n                          id=\"person\"\n                          value=\"person\"\n                          checked={exemption.person}\n                          onChange={() => toggleExemption(\"person\")}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"family\">\n                          Person\n                        </label>\n                        <p className=\"m-0\">\n                          <small className=\"text-muted\">(9,000 JOD)</small>\n                        </p>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"exemption\"\n                          id=\"family\"\n                          value=\"family\"\n                          checked={exemption.family}\n                          onChange={() => toggleExemption(\"family\")}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"family\">\n                          Family\n                        </label>\n                        <p className=\"m-0\">\n                          <small className=\"text-muted\">(18,000 JOD)</small>\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label className=\"border-bottom\">\n                        Social Security Deduction\n                      </label>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"socialSecurity\"\n                          id=\"none\"\n                          value=\"none\"\n                          checked={socialSecurity.none}\n                          onChange={() => selectSocialSecurity(\"none\")}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"family\">\n                          None\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"socialSecurity\"\n                          id=\"0.075\"\n                          value=\"0.075\"\n                          checked={socialSecurity[\"0.075\"]}\n                          onChange={() => selectSocialSecurity(\"0.075\")}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"family\">\n                          7.5%\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"socialSecurity\"\n                          id=\"0.1425\"\n                          value=\"0.1425\"\n                          checked={socialSecurity[\"0.1425\"]}\n                          onChange={() => selectSocialSecurity(\"0.1425\")}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"family\">\n                          14.25%\n                        </label>\n                      </div>\n                      <div className=\"form-check\">\n                        <input\n                          className=\"form-check-input\"\n                          type=\"radio\"\n                          name=\"socialSecurity\"\n                          id=\"0.2175\"\n                          value=\"0.2175\"\n                          checked={socialSecurity[\"0.2175\"]}\n                          onChange={() => selectSocialSecurity(\"0.2175\")}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"family\">\n                          21.75%\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div className=\"form-group mb-0\">\n                    <label htmlFor=\"amount\">Amount</label>\n                    <input\n                      id=\"amount\"\n                      type=\"number\"\n                      className=\"form-control\"\n                      name=\"amount\"\n                      placeholder=\"Annual Salary in JOD\"\n                      value={amount}\n                      onChange={(event) => onChange(event.target)}\n                    />\n                    <small\n                      className=\"text-danger\"\n                      style={{ visibility: msg ? \"visible\" : \"hidden\" }}\n                    >\n                      <ul>\n                        <li>{msg ? msg : \"msg\"}</li>\n                      </ul>\n                    </small>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row m-0 d-flex justify-content-around flex-column flex-md-row\">\n                <div className=\"text-center m-0\">\n                  <button\n                    className=\"btn mt-3\"\n                    disabled={amount ? false : true}\n                    onClick={() => onSubmit(\"included\")}\n                  >\n                    Calculate, Deductions Included\n                  </button>\n                </div>\n\n                <div className=\"text-center m-0\">\n                  <button\n                    className=\"btn mt-3\"\n                    disabled={amount ? false : true}\n                    onClick={() => onSubmit(\"excluded\")}\n                  >\n                    Calculate, Deductions Excluded\n                  </button>\n                </div>\n              </div>\n              <div\n                className=\"row d-flex justify-content-center mt-2\"\n                style={{ visibility: calculating ? \"visible\" : \"hidden\" }}\n              >\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Calculating...</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-1\"></div>\n            <div className=\"col-10\">\n              <hr />\n              <div className=\"row d-flex justify-content-around flex-column flex-lg-row\">\n                <div className=\"mt-2\">\n                  <div className=\" text-center\">\n                    <label className=\"border-bottom\">Salaries</label>\n                  </div>\n                  <pre className=\"m-1\">\n                    <b>Basic Annual Salary: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(annualSalary)\n                    )}\n                  </pre>\n                  <pre className=\"m-1 mb-3\">\n                    <b>Net Annual Salary: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(netAnnualSalary)\n                    )}\n                  </pre>\n\n                  <pre className=\"m-1\">\n                    <b>Basic Monthly Salary: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(monthlySalary)\n                    )}\n                  </pre>\n                  <pre className=\"m-1\">\n                    <b>Net Monthly Salary: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(netMonthlySalary)\n                    )}\n                  </pre>\n                </div>\n\n                <div className=\"mt-2\">\n                  <div className=\" text-center\">\n                    <label className=\"border-bottom\">Deductions</label>\n                  </div>\n                  <pre className=\"m-1\">\n                    <b>Total Income Tax: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(totalTax)\n                    )}\n                  </pre>\n                  <pre className=\"m-1 mb-3\">\n                    <b>Monthly Income Tax: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(monthlyTax)\n                    )}\n                  </pre>\n                  <pre className=\"m-1\">\n                    <b>Total Social Security: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(totalSS)\n                    )}\n                  </pre>\n                  <pre className=\"m-1\">\n                    <b>Monthly Social Security: </b>\n                    {new Intl.NumberFormat(\"ja-JP\").format(\n                      roundToThreeDecimals(monthlySS)\n                    )}\n                  </pre>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"invisible\" style={{ fontSize: \"10px\" }}>\n            margin\n          </div>\n        </div>\n        <div className=\"mt-5\">\n          <footer className=\"page-footer font-small\">\n            <div className=\"container\">\n              <div className=\"py-3 float-right\">\n                Developed by:\n                <a\n                  href=\"https://www.linkedin.com/in/ahmad-ghzawi-827082139/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"text-white\"\n                >\n                  {\" \"}\n                  Ahmad Al-Ghzawi\n                </a>\n              </div>\n            </div>\n          </footer>\n        </div>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}